---
name: Build ISOs

on:
  workflow_dispatch:
    inputs:
      upload-to-s3:
        description: "Upload to S3"
        required: false
        default: false
        type: boolean
      platform:
        required: true
        type: choice
        options:
          - amd64
          - arm64
  pull_request:
    branches:
      - main
    paths:
      - './iso.toml'
      - './.github/workflows/build-iso.yml'
      - './Justfile'

env:
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository }}"
  DEFAULT_TAG: "latest"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

      - name: Build ISO
        id: build
        uses: ublue-os/bootc-image-builder-action@main
        with:
          bootc-image-builder-image: ghcr.io/centos-workstation/bootc-image-builder:latest
          use-librepo: true
          config-file: ./iso.toml
          image: ${{ env.IMAGE_REGISTRY }}:${{ env.DEFAULT_TAG }}

      - name: Upload ISOs and Checksum to Job Artifacts
        if: inputs.upload-to-s3 != true && github.event_name != 'pull_request'
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v4
        with:
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true
      
      - name: Upload to S3
        if: inputs.upload-to-s3 == true && github.event_name != 'pull_request'
        shell: bash
        env:
          RCLONE_CONFIG_S3_TYPE: s3
          RCLONE_CONFIG_S3_PROVIDER: ${{ secrets.S3_PROVIDER }}
          RCLONE_CONFIG_S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          RCLONE_CONFIG_S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_S3_REGION: ${{ secrets.S3_REGION }}
          RCLONE_CONFIG_S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          SOURCE_DIR: ${{ steps.build.outputs.output-directory }}
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone
          rclone copy $SOURCE_DIR S3:${{ secrets.S3_BUCKET_NAME }}

env:
  BUILDER_IMAGE: ghcr.io/ublue-os/bootc-image-builder:latest
  # Choose one of these sets:
  DISTRO: bluefin
  RELEASE: "41"
  # If bluefin 41 still errors later, try:
  # DISTRO: fedora
  # RELEASE: "41"

jobs:
  build_iso:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR (pull your image)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ISO with uBlue bootc-image-builder
        run: |
          set -euxo pipefail
          IMAGE="ghcr.io/${{ github.repository_owner }}/lin-aba:latest"
          mkdir -p out

          # Pull builder once
          docker pull "${{ env.BUILDER_IMAGE }}"

          # Generate manifest for ISO (uses distro defs shipped in the uBlue builder)
          docker run --rm --privileged \
            -v "$PWD:/work:z" -w /work \
            "${{ env.BUILDER_IMAGE }}" \
            manifest \
            --type iso \
            --distro "${{ env.DISTRO }}" \
            --release "${{ env.RELEASE }}" \
            --image "$IMAGE" \
            --output manifest-iso.json

          # Build the ISO from the manifest
          docker run --rm --privileged \
            -v "$PWD:/work:z" -w /work \
            "${{ env.BUILDER_IMAGE }}" \
            build \
            --manifest manifest-iso.json \
            --output out

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: lin-aba-iso
          path: out/*.iso
